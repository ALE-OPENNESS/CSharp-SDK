/*
* Copyright 2021 ALE International
*
* Permission is hereby granted, free of charge, to any person obtaining a copy of this 
* software and associated documentation files (the "Software"), to deal in the Software 
* without restriction, including without limitation the rights to use, copy, modify, merge, 
* publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons 
* to whom the Software is furnished to do so, subject to the following conditions:
* 
* The above copyright notice and this permission notice shall be included in all copies or 
* substantial portions of the Software.
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING 
* BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
* DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

using o2g.Types.CommonNS;

namespace o2g.Types.TelephonyNS.CallNS
{
    /// <summary>
    /// Represent a participant to a call. A call can have several participants (case of a conference for exemple).
    /// <para>A participant is identified by its <see cref="ParticipantId"/>, a unique <see langword="string"/> generated by the O2G server</para>
    /// </summary>
    public class Participant
    {
        /// <summary>
        /// The identifier of this participant. This is an internal key. 
        /// </summary>
        /// <value>
        /// A unique <see langword="string"/> that identify this participant.
        /// </value>
        /// <remarks>
        /// Even if it can be equals to the participant extension number, an application should not use this identifier for other purpose than retrieving this participant.
        /// </remarks>
        public string ParticipantId { get; set; }

        /// <summary>
        /// This property gives the participant identity.
        /// </summary>
        /// <value>
        /// A <see cref="PartyInfo"/> that is the participant identity.
        /// </value>
        public PartyInfo Identity { get; set; }

        /// <summary>
        /// Return whether the participant identity is secret.
        /// </summary>
        /// <value>
        /// <see langword="true"/> if the participant is anonymous; <see langword="false"/> otherwise.
        /// </value>
        public bool Anonymous { get; set; }

        /// <summary>
        /// Return whether the participant can be dropped from a call.
        /// </summary>
        /// <value>
        /// <see langword="true"/> if the participant can be dropped; <see langword="false"/> otherwise.
        /// </value>
        public bool Undroppable { get; set; }

        /// <summary>
        /// This property gives the participant state.
        /// </summary>
        /// <value>
        /// A <see cref="MediaState"/> value that is the participant state.
        /// </value>
        /// <remarks>
        /// This property is only filled in multi-party call (>=3 participants) and only when the Participant mediaState is changed to RINGING_INCOMING or from RINGING_INCOMING to ACTIVE.
        /// </remarks>
        public MediaState State { get; set; }
    }
}
